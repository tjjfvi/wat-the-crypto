(module
  (import "host" "memory" (memory 1))

  ;; mem-start: 0
  ;; mem-end: 192

  ;; (import "log" "u32" (func $log_u32 (param i32)))
  ;; (import "log" "u64" (func $log_u64 (param i64)))
  ;; (import "log" "i32" (func $log_i32 (param i32)))
  ;; (import "log" "i64" (func $log_i64 (param i64)))
  ;; (import "log" "brk" (func $log_brk))
  ;; (func $dbg_u32 (param $v i32) (result i32) local.get $v call $log_u32 local.get $v)
  ;; (func $dbg_u64 (param $v i64) (result i64) local.get $v call $log_u64 local.get $v)
  ;; (func $dbg_i32 (param $v i32) (result i32) local.get $v call $log_i32 local.get $v)
  ;; (func $dbg_i64 (param $v i64) (result i64) local.get $v call $log_i64 local.get $v)

  (export "keccak_rc_adr" (global $keccak_rc_adr))
  (global $keccak_rc_adr i32 (i32.const 0))
  (global $keccak_rc_end i32 (i32.const 192))

  (func $_keccak_0 (param $adr i32) (result i32) (result i64)
    (i32.add (local.get $adr) (i32.const 8))
    (i64.load offset=0 (local.get $adr))
    (i64.xor (i64.load offset=40 (local.get $adr)))
    (i64.xor (i64.load offset=80 (local.get $adr)))
    (i64.xor (i64.load offset=120 (local.get $adr)))
    (i64.xor (i64.load offset=160 (local.get $adr)))
  )

  (func $_keccak_1 (param $adr i32) (param $n i64) (result i32)
    (i32.add (local.get $adr) (i32.const 8))
    (i64.store offset=0 (local.get $adr) (i64.load offset=0 (local.get $adr)) (i64.xor (local.get $n)))
    (i64.store offset=40 (local.get $adr) (i64.load offset=40 (local.get $adr)) (i64.xor (local.get $n)))
    (i64.store offset=80 (local.get $adr) (i64.load offset=80 (local.get $adr)) (i64.xor (local.get $n)))
    (i64.store offset=120 (local.get $adr) (i64.load offset=120 (local.get $adr)) (i64.xor (local.get $n)))
    (i64.store offset=160 (local.get $adr) (i64.load offset=160 (local.get $adr)) (i64.xor (local.get $n)))
  )

  (func $_keccak_2 (param $adr i32) (param $v i64) (param $n i32) (param $l i64) (result i32) (result i64)
    (local.get $adr)
    (i64.load (local.tee $adr (i32.add (local.get $adr) (local.get $n))))
    (i64.store (local.get $adr) (i64.rotl (local.get $v) (local.get $l)))
  )

  (func $_keccak_3 (param $adr i32) (result i32)
    (local $x0 i64)
    (local $x1 i64)
    (local $x2 i64)
    (local $x3 i64)
    (local $x4 i64)

    (i32.add (local.get $adr) (i32.const 40))
    (local.set $x0 (i64.load offset=0 (local.get $adr)))
    (local.set $x1 (i64.load offset=8 (local.get $adr)))
    (local.set $x2 (i64.load offset=16 (local.get $adr)))
    (local.set $x3 (i64.load offset=24 (local.get $adr)))
    (local.set $x4 (i64.load offset=32 (local.get $adr)))
    (i64.store offset=0 (local.get $adr) (local.get $x0) (i64.xor (i64.and (local.get $x2) (i64.xor (local.get $x1) (i64.const -1)))))
    (i64.store offset=8 (local.get $adr) (local.get $x1) (i64.xor (i64.and (local.get $x3) (i64.xor (local.get $x2) (i64.const -1)))))
    (i64.store offset=16 (local.get $adr) (local.get $x2) (i64.xor (i64.and (local.get $x4) (i64.xor (local.get $x3) (i64.const -1)))))
    (i64.store offset=24 (local.get $adr) (local.get $x3) (i64.xor (i64.and (local.get $x0) (i64.xor (local.get $x4) (i64.const -1)))))
    (i64.store offset=32 (local.get $adr) (local.get $x4) (i64.xor (i64.and (local.get $x1) (i64.xor (local.get $x0) (i64.const -1)))))
  )

  (export "keccak_f1600" (func $keccak_f1600))
  (func $keccak_f1600 (param $adr i32)
    (local $rc_adr i32)
    (local $x0 i64)
    (local $x1 i64)
    (local $x2 i64)
    (local $x3 i64)
    (local $x4 i64)
    (local $n i64)

    (local.set $rc_adr (global.get $keccak_rc_adr))

    (loop $rc
      (local.get $adr)
      (local.set $x0 (call $_keccak_0))
      (local.set $x1 (call $_keccak_0))
      (local.set $x2 (call $_keccak_0))
      (local.set $x3 (call $_keccak_0))
      (local.set $x4 (call $_keccak_0))
      (drop)

      (local.get $adr)
      (call $_keccak_1 (local.get $x4) (i64.xor (i64.rotl (local.get $x1) (i64.const 1))))
      (call $_keccak_1 (local.get $x0) (i64.xor (i64.rotl (local.get $x2) (i64.const 1))))
      (call $_keccak_1 (local.get $x1) (i64.xor (i64.rotl (local.get $x3) (i64.const 1))))
      (call $_keccak_1 (local.get $x2) (i64.xor (i64.rotl (local.get $x4) (i64.const 1))))
      (call $_keccak_1 (local.get $x3) (i64.xor (i64.rotl (local.get $x0) (i64.const 1))))
      (drop)

      (local.get $adr) (i64.load offset=8 (local.get $adr))
      (call $_keccak_2 (i32.const 80) (i64.const 1))
      (call $_keccak_2 (i32.const 56) (i64.const 3))
      (call $_keccak_2 (i32.const 88) (i64.const 6))
      (call $_keccak_2 (i32.const 136) (i64.const 10))
      (call $_keccak_2 (i32.const 144) (i64.const 15))
      (call $_keccak_2 (i32.const 24) (i64.const 21))
      (call $_keccak_2 (i32.const 40) (i64.const 28))
      (call $_keccak_2 (i32.const 128) (i64.const 36))
      (call $_keccak_2 (i32.const 64) (i64.const 45))
      (call $_keccak_2 (i32.const 168) (i64.const 55))
      (call $_keccak_2 (i32.const 192) (i64.const 2))
      (call $_keccak_2 (i32.const 32) (i64.const 14))
      (call $_keccak_2 (i32.const 120) (i64.const 27))
      (call $_keccak_2 (i32.const 184) (i64.const 41))
      (call $_keccak_2 (i32.const 152) (i64.const 56))
      (call $_keccak_2 (i32.const 104) (i64.const 8))
      (call $_keccak_2 (i32.const 96) (i64.const 25))
      (call $_keccak_2 (i32.const 16) (i64.const 43))
      (call $_keccak_2 (i32.const 160) (i64.const 62))
      (call $_keccak_2 (i32.const 112) (i64.const 18))
      (call $_keccak_2 (i32.const 176) (i64.const 39))
      (call $_keccak_2 (i32.const 72) (i64.const 61))
      (call $_keccak_2 (i32.const 48) (i64.const 20))
      (call $_keccak_2 (i32.const 8) (i64.const 44))
      (drop) (drop)

      (local.get $adr)
      (call $_keccak_3)
      (call $_keccak_3)
      (call $_keccak_3)
      (call $_keccak_3)
      (call $_keccak_3)
      (drop)

      (i64.store (local.get $adr) (i64.load (local.get $adr)) (i64.xor (i64.load (local.get $rc_adr))))
      (local.tee $rc_adr (i32.add (local.get $rc_adr) (i32.const 8)))
      (br_if $rc (i32.lt_u (global.get $keccak_rc_end)))
    )
  )
)
